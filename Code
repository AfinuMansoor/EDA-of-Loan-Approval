{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "source": [
        "## **Understanding Key Factors Influencing Loan Approval Decisions**"
      ],
      "metadata": {
        "id": "Xf3WTWawn37Y"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "The objective of this analysis is to explore key factors that influence loan approval decisions in a financial institution. By examining variables such as income, loan amount, CIBIL score, employment status, and asset values, we aim to provide actionable insights to optimize approval strategies, reduce risk, and increase customer satisfaction."
      ],
      "metadata": {
        "id": "zsDyg4kRUxHV"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "id": "BOtby7gQnVLr"
      },
      "outputs": [],
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df=pd.read_csv(\"/content/loan_approval_dataset.csv\")"
      ],
      "metadata": {
        "id": "uCm0V5ksoMQZ"
      },
      "execution_count": 3,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 261
        },
        "id": "AxRw0GBYodot",
        "outputId": "0c99c264-91eb-4bfc-c9f9-219a2c99e07f"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   loan_id   no_of_dependents      education  self_employed   income_annum  \\\n",
              "0        1                  2       Graduate             No        9600000   \n",
              "1        2                  0   Not Graduate            Yes        4100000   \n",
              "2        3                  3       Graduate             No        9100000   \n",
              "3        4                  3       Graduate             No        8200000   \n",
              "4        5                  5   Not Graduate            Yes        9800000   \n",
              "\n",
              "    loan_amount   loan_term   cibil_score   residential_assets_value  \\\n",
              "0      29900000          12           778                    2400000   \n",
              "1      12200000           8           417                    2700000   \n",
              "2      29700000          20           506                    7100000   \n",
              "3      30700000           8           467                   18200000   \n",
              "4      24200000          20           382                   12400000   \n",
              "\n",
              "    commercial_assets_value   luxury_assets_value   bank_asset_value  \\\n",
              "0                  17600000              22700000            8000000   \n",
              "1                   2200000               8800000            3300000   \n",
              "2                   4500000              33300000           12800000   \n",
              "3                   3300000              23300000            7900000   \n",
              "4                   8200000              29400000            5000000   \n",
              "\n",
              "   loan_status  \n",
              "0     Approved  \n",
              "1     Rejected  \n",
              "2     Rejected  \n",
              "3     Rejected  \n",
              "4     Rejected  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-16fead41-e158-4d5f-84fd-45d1ae5f3de5\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>loan_id</th>\n",
              "      <th>no_of_dependents</th>\n",
              "      <th>education</th>\n",
              "      <th>self_employed</th>\n",
              "      <th>income_annum</th>\n",
              "      <th>loan_amount</th>\n",
              "      <th>loan_term</th>\n",
              "      <th>cibil_score</th>\n",
              "      <th>residential_assets_value</th>\n",
              "      <th>commercial_assets_value</th>\n",
              "      <th>luxury_assets_value</th>\n",
              "      <th>bank_asset_value</th>\n",
              "      <th>loan_status</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>Graduate</td>\n",
              "      <td>No</td>\n",
              "      <td>9600000</td>\n",
              "      <td>29900000</td>\n",
              "      <td>12</td>\n",
              "      <td>778</td>\n",
              "      <td>2400000</td>\n",
              "      <td>17600000</td>\n",
              "      <td>22700000</td>\n",
              "      <td>8000000</td>\n",
              "      <td>Approved</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>Not Graduate</td>\n",
              "      <td>Yes</td>\n",
              "      <td>4100000</td>\n",
              "      <td>12200000</td>\n",
              "      <td>8</td>\n",
              "      <td>417</td>\n",
              "      <td>2700000</td>\n",
              "      <td>2200000</td>\n",
              "      <td>8800000</td>\n",
              "      <td>3300000</td>\n",
              "      <td>Rejected</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>Graduate</td>\n",
              "      <td>No</td>\n",
              "      <td>9100000</td>\n",
              "      <td>29700000</td>\n",
              "      <td>20</td>\n",
              "      <td>506</td>\n",
              "      <td>7100000</td>\n",
              "      <td>4500000</td>\n",
              "      <td>33300000</td>\n",
              "      <td>12800000</td>\n",
              "      <td>Rejected</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "      <td>Graduate</td>\n",
              "      <td>No</td>\n",
              "      <td>8200000</td>\n",
              "      <td>30700000</td>\n",
              "      <td>8</td>\n",
              "      <td>467</td>\n",
              "      <td>18200000</td>\n",
              "      <td>3300000</td>\n",
              "      <td>23300000</td>\n",
              "      <td>7900000</td>\n",
              "      <td>Rejected</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "      <td>Not Graduate</td>\n",
              "      <td>Yes</td>\n",
              "      <td>9800000</td>\n",
              "      <td>24200000</td>\n",
              "      <td>20</td>\n",
              "      <td>382</td>\n",
              "      <td>12400000</td>\n",
              "      <td>8200000</td>\n",
              "      <td>29400000</td>\n",
              "      <td>5000000</td>\n",
              "      <td>Rejected</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-16fead41-e158-4d5f-84fd-45d1ae5f3de5')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-16fead41-e158-4d5f-84fd-45d1ae5f3de5 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-16fead41-e158-4d5f-84fd-45d1ae5f3de5');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-9dd5ee49-56ea-4cd4-995c-52c00effcc24\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9dd5ee49-56ea-4cd4-995c-52c00effcc24')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-9dd5ee49-56ea-4cd4-995c-52c00effcc24 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 4269,\n  \"fields\": [\n    {\n      \"column\": \"loan_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1232,\n        \"min\": 1,\n        \"max\": 4269,\n        \"num_unique_values\": 4269,\n        \"samples\": [\n          1704,\n          1174,\n          309\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" no_of_dependents\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 5,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          2,\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" education\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \" Not Graduate\",\n          \" Graduate\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" self_employed\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \" Yes\",\n          \" No\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" income_annum\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2806839,\n        \"min\": 200000,\n        \"max\": 9900000,\n        \"num_unique_values\": 98,\n        \"samples\": [\n          6200000,\n          9300000\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" loan_amount\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9043362,\n        \"min\": 300000,\n        \"max\": 39500000,\n        \"num_unique_values\": 378,\n        \"samples\": [\n          25800000,\n          26100000\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" loan_term\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5,\n        \"min\": 2,\n        \"max\": 20,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          14,\n          8\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" cibil_score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 172,\n        \"min\": 300,\n        \"max\": 900,\n        \"num_unique_values\": 601,\n        \"samples\": [\n          859,\n          414\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" residential_assets_value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6503636,\n        \"min\": -100000,\n        \"max\": 29100000,\n        \"num_unique_values\": 278,\n        \"samples\": [\n          700000,\n          3500000\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" commercial_assets_value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4388966,\n        \"min\": 0,\n        \"max\": 19400000,\n        \"num_unique_values\": 188,\n        \"samples\": [\n          13500000,\n          14600000\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" luxury_assets_value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9103753,\n        \"min\": 300000,\n        \"max\": 39200000,\n        \"num_unique_values\": 379,\n        \"samples\": [\n          15300000,\n          12100000\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" bank_asset_value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3250185,\n        \"min\": 0,\n        \"max\": 14700000,\n        \"num_unique_values\": 146,\n        \"samples\": [\n          4800000,\n          14400000\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" loan_status\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \" Rejected\",\n          \" Approved\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.tail()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 278
        },
        "id": "nlNwL6ZxpdKN",
        "outputId": "bea35374-93f4-4c0c-b2fa-06b6c2a23540"
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      loan_id   no_of_dependents      education  self_employed   income_annum  \\\n",
              "4264     4265                  5       Graduate            Yes        1000000   \n",
              "4265     4266                  0   Not Graduate            Yes        3300000   \n",
              "4266     4267                  2   Not Graduate             No        6500000   \n",
              "4267     4268                  1   Not Graduate             No        4100000   \n",
              "4268     4269                  1       Graduate             No        9200000   \n",
              "\n",
              "       loan_amount   loan_term   cibil_score   residential_assets_value  \\\n",
              "4264       2300000          12           317                    2800000   \n",
              "4265      11300000          20           559                    4200000   \n",
              "4266      23900000          18           457                    1200000   \n",
              "4267      12800000           8           780                    8200000   \n",
              "4268      29700000          10           607                   17800000   \n",
              "\n",
              "       commercial_assets_value   luxury_assets_value   bank_asset_value  \\\n",
              "4264                    500000               3300000             800000   \n",
              "4265                   2900000              11000000            1900000   \n",
              "4266                  12400000              18100000            7300000   \n",
              "4267                    700000              14100000            5800000   \n",
              "4268                  11800000              35700000           12000000   \n",
              "\n",
              "      loan_status  \n",
              "4264     Rejected  \n",
              "4265     Approved  \n",
              "4266     Rejected  \n",
              "4267     Approved  \n",
              "4268     Approved  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-77cd9590-4e7e-4340-a283-ec5a8bfff9b0\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>loan_id</th>\n",
              "      <th>no_of_dependents</th>\n",
              "      <th>education</th>\n",
              "      <th>self_employed</th>\n",
              "      <th>income_annum</th>\n",
              "      <th>loan_amount</th>\n",
              "      <th>loan_term</th>\n",
              "      <th>cibil_score</th>\n",
              "      <th>residential_assets_value</th>\n",
              "      <th>commercial_assets_value</th>\n",
              "      <th>luxury_assets_value</th>\n",
              "      <th>bank_asset_value</th>\n",
              "      <th>loan_status</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>4264</th>\n",
              "      <td>4265</td>\n",
              "      <td>5</td>\n",
              "      <td>Graduate</td>\n",
              "      <td>Yes</td>\n",
              "      <td>1000000</td>\n",
              "      <td>2300000</td>\n",
              "      <td>12</td>\n",
              "      <td>317</td>\n",
              "      <td>2800000</td>\n",
              "      <td>500000</td>\n",
              "      <td>3300000</td>\n",
              "      <td>800000</td>\n",
              "      <td>Rejected</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4265</th>\n",
              "      <td>4266</td>\n",
              "      <td>0</td>\n",
              "      <td>Not Graduate</td>\n",
              "      <td>Yes</td>\n",
              "      <td>3300000</td>\n",
              "      <td>11300000</td>\n",
              "      <td>20</td>\n",
              "      <td>559</td>\n",
              "      <td>4200000</td>\n",
              "      <td>2900000</td>\n",
              "      <td>11000000</td>\n",
              "      <td>1900000</td>\n",
              "      <td>Approved</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4266</th>\n",
              "      <td>4267</td>\n",
              "      <td>2</td>\n",
              "      <td>Not Graduate</td>\n",
              "      <td>No</td>\n",
              "      <td>6500000</td>\n",
              "      <td>23900000</td>\n",
              "      <td>18</td>\n",
              "      <td>457</td>\n",
              "      <td>1200000</td>\n",
              "      <td>12400000</td>\n",
              "      <td>18100000</td>\n",
              "      <td>7300000</td>\n",
              "      <td>Rejected</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4267</th>\n",
              "      <td>4268</td>\n",
              "      <td>1</td>\n",
              "      <td>Not Graduate</td>\n",
              "      <td>No</td>\n",
              "      <td>4100000</td>\n",
              "      <td>12800000</td>\n",
              "      <td>8</td>\n",
              "      <td>780</td>\n",
              "      <td>8200000</td>\n",
              "      <td>700000</td>\n",
              "      <td>14100000</td>\n",
              "      <td>5800000</td>\n",
              "      <td>Approved</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4268</th>\n",
              "      <td>4269</td>\n",
              "      <td>1</td>\n",
              "      <td>Graduate</td>\n",
              "      <td>No</td>\n",
              "      <td>9200000</td>\n",
              "      <td>29700000</td>\n",
              "      <td>10</td>\n",
              "      <td>607</td>\n",
              "      <td>17800000</td>\n",
              "      <td>11800000</td>\n",
              "      <td>35700000</td>\n",
              "      <td>12000000</td>\n",
              "      <td>Approved</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-77cd9590-4e7e-4340-a283-ec5a8bfff9b0')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-77cd9590-4e7e-4340-a283-ec5a8bfff9b0 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-77cd9590-4e7e-4340-a283-ec5a8bfff9b0');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-bde9228a-9291-4ace-8edb-9ee1867156ee\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-bde9228a-9291-4ace-8edb-9ee1867156ee')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-bde9228a-9291-4ace-8edb-9ee1867156ee button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"loan_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 4265,\n        \"max\": 4269,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          4266,\n          4269,\n          4267\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" no_of_dependents\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 5,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0,\n          1,\n          5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" education\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \" Not Graduate\",\n          \" Graduate\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" self_employed\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \" No\",\n          \" Yes\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" income_annum\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3139585,\n        \"min\": 1000000,\n        \"max\": 9200000,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          3300000,\n          9200000\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" loan_amount\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10841125,\n        \"min\": 2300000,\n        \"max\": 29700000,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          11300000,\n          29700000\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" loan_term\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5,\n        \"min\": 8,\n        \"max\": 20,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          20,\n          10\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" cibil_score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 172,\n        \"min\": 317,\n        \"max\": 780,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          559,\n          607\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" residential_assets_value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6653420,\n        \"min\": 1200000,\n        \"max\": 17800000,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          4200000,\n          17800000\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" commercial_assets_value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5957600,\n        \"min\": 500000,\n        \"max\": 12400000,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          2900000,\n          11800000\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" luxury_assets_value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12056450,\n        \"min\": 3300000,\n        \"max\": 35700000,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          11000000,\n          35700000\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" bank_asset_value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4489209,\n        \"min\": 800000,\n        \"max\": 12000000,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1900000,\n          12000000\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" loan_status\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \" Approved\",\n          \" Rejected\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "z0r3CRCBpibe",
        "outputId": "95edd910-f9e0-4365-e864-bc1b2671d5a5"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(4269, 13)"
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.sample(5)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 295
        },
        "id": "k4swKKz2pm18",
        "outputId": "6d895acb-2fcf-471a-cd8f-71b0d2ac000a"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      loan_id   no_of_dependents      education  self_employed   income_annum  \\\n",
              "3954     3955                  5       Graduate            Yes        5300000   \n",
              "555       556                  5   Not Graduate            Yes        6200000   \n",
              "2570     2571                  4   Not Graduate            Yes        6100000   \n",
              "1193     1194                  2   Not Graduate            Yes        2100000   \n",
              "130       131                  0   Not Graduate            Yes        9500000   \n",
              "\n",
              "       loan_amount   loan_term   cibil_score   residential_assets_value  \\\n",
              "3954      14000000           6           633                   11800000   \n",
              "555       22200000          20           819                   13500000   \n",
              "2570      12500000          14           862                   11300000   \n",
              "1193       5600000          16           426                     400000   \n",
              "130       20800000          14           565                   15100000   \n",
              "\n",
              "       commercial_assets_value   luxury_assets_value   bank_asset_value  \\\n",
              "3954                   4500000              12800000            6100000   \n",
              "555                    6600000              21700000            8700000   \n",
              "2570                   1500000              21900000            6800000   \n",
              "1193                    300000               7100000            1200000   \n",
              "130                   11900000              33900000           13400000   \n",
              "\n",
              "      loan_status  \n",
              "3954     Approved  \n",
              "555      Approved  \n",
              "2570     Approved  \n",
              "1193     Rejected  \n",
              "130      Approved  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-1ba04888-1698-4f85-a552-2455a0e744f4\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>loan_id</th>\n",
              "      <th>no_of_dependents</th>\n",
              "      <th>education</th>\n",
              "      <th>self_employed</th>\n",
              "      <th>income_annum</th>\n",
              "      <th>loan_amount</th>\n",
              "      <th>loan_term</th>\n",
              "      <th>cibil_score</th>\n",
              "      <th>residential_assets_value</th>\n",
              "      <th>commercial_assets_value</th>\n",
              "      <th>luxury_assets_value</th>\n",
              "      <th>bank_asset_value</th>\n",
              "      <th>loan_status</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>3954</th>\n",
              "      <td>3955</td>\n",
              "      <td>5</td>\n",
              "      <td>Graduate</td>\n",
              "      <td>Yes</td>\n",
              "      <td>5300000</td>\n",
              "      <td>14000000</td>\n",
              "      <td>6</td>\n",
              "      <td>633</td>\n",
              "      <td>11800000</td>\n",
              "      <td>4500000</td>\n",
              "      <td>12800000</td>\n",
              "      <td>6100000</td>\n",
              "      <td>Approved</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>555</th>\n",
              "      <td>556</td>\n",
              "      <td>5</td>\n",
              "      <td>Not Graduate</td>\n",
              "      <td>Yes</td>\n",
              "      <td>6200000</td>\n",
              "      <td>22200000</td>\n",
              "      <td>20</td>\n",
              "      <td>819</td>\n",
              "      <td>13500000</td>\n",
              "      <td>6600000</td>\n",
              "      <td>21700000</td>\n",
              "      <td>8700000</td>\n",
              "      <td>Approved</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2570</th>\n",
              "      <td>2571</td>\n",
              "      <td>4</td>\n",
              "      <td>Not Graduate</td>\n",
              "      <td>Yes</td>\n",
              "      <td>6100000</td>\n",
              "      <td>12500000</td>\n",
              "      <td>14</td>\n",
              "      <td>862</td>\n",
              "      <td>11300000</td>\n",
              "      <td>1500000</td>\n",
              "      <td>21900000</td>\n",
              "      <td>6800000</td>\n",
              "      <td>Approved</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1193</th>\n",
              "      <td>1194</td>\n",
              "      <td>2</td>\n",
              "      <td>Not Graduate</td>\n",
              "      <td>Yes</td>\n",
              "      <td>2100000</td>\n",
              "      <td>5600000</td>\n",
              "      <td>16</td>\n",
              "      <td>426</td>\n",
              "      <td>400000</td>\n",
              "      <td>300000</td>\n",
              "      <td>7100000</td>\n",
              "      <td>1200000</td>\n",
              "      <td>Rejected</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>130</th>\n",
              "      <td>131</td>\n",
              "      <td>0</td>\n",
              "      <td>Not Graduate</td>\n",
              "      <td>Yes</td>\n",
              "      <td>9500000</td>\n",
              "      <td>20800000</td>\n",
              "      <td>14</td>\n",
              "      <td>565</td>\n",
              "      <td>15100000</td>\n",
              "      <td>11900000</td>\n",
              "      <td>33900000</td>\n",
              "      <td>13400000</td>\n",
              "      <td>Approved</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1ba04888-1698-4f85-a552-2455a0e744f4')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-1ba04888-1698-4f85-a552-2455a0e744f4 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-1ba04888-1698-4f85-a552-2455a0e744f4');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-6c80c249-f725-4bbd-9f98-75356718f3f0\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6c80c249-f725-4bbd-9f98-75356718f3f0')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-6c80c249-f725-4bbd-9f98-75356718f3f0 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"loan_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1570,\n        \"min\": 131,\n        \"max\": 3955,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          556,\n          131,\n          2571\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" no_of_dependents\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 0,\n        \"max\": 5,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          4,\n          0,\n          5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" education\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \" Not Graduate\",\n          \" Graduate\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" self_employed\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \" Yes\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" income_annum\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2639696,\n        \"min\": 2100000,\n        \"max\": 9500000,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          6200000\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" loan_amount\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6728447,\n        \"min\": 5600000,\n        \"max\": 22200000,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          22200000\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" loan_term\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5,\n        \"min\": 6,\n        \"max\": 20,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          20\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" cibil_score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 180,\n        \"min\": 426,\n        \"max\": 862,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          819\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" residential_assets_value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5798016,\n        \"min\": 400000,\n        \"max\": 15100000,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          13500000\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" commercial_assets_value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4603042,\n        \"min\": 300000,\n        \"max\": 11900000,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          6600000\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" luxury_assets_value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10205488,\n        \"min\": 7100000,\n        \"max\": 33900000,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          21700000\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" bank_asset_value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4417352,\n        \"min\": 1200000,\n        \"max\": 13400000,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          8700000\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" loan_status\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \" Rejected\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.dtypes"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 491
        },
        "id": "BZedSKC3rUzF",
        "outputId": "58127e23-d78a-467f-b2db-d1356deb5d8b"
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "loan_id                       int64\n",
              " no_of_dependents             int64\n",
              " education                   object\n",
              " self_employed               object\n",
              " income_annum                 int64\n",
              " loan_amount                  int64\n",
              " loan_term                    int64\n",
              " cibil_score                  int64\n",
              " residential_assets_value     int64\n",
              " commercial_assets_value      int64\n",
              " luxury_assets_value          int64\n",
              " bank_asset_value             int64\n",
              " loan_status                 object\n",
              "dtype: object"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>loan_id</th>\n",
              "      <td>int64</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>no_of_dependents</th>\n",
              "      <td>int64</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>education</th>\n",
              "      <td>object</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>self_employed</th>\n",
              "      <td>object</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>income_annum</th>\n",
              "      <td>int64</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>loan_amount</th>\n",
              "      <td>int64</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>loan_term</th>\n",
              "      <td>int64</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>cibil_score</th>\n",
              "      <td>int64</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>residential_assets_value</th>\n",
              "      <td>int64</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>commercial_assets_value</th>\n",
              "      <td>int64</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>luxury_assets_value</th>\n",
              "      <td>int64</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>bank_asset_value</th>\n",
              "      <td>int64</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>loan_status</th>\n",
              "      <td>object</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> object</label>"
            ]
          },
          "metadata": {},
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "X-H_1p1_rZ7x",
        "outputId": "bb4e254d-6505-4df2-dc24-8deae6a72875"
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 4269 entries, 0 to 4268\n",
            "Data columns (total 13 columns):\n",
            " #   Column                     Non-Null Count  Dtype \n",
            "---  ------                     --------------  ----- \n",
            " 0   loan_id                    4269 non-null   int64 \n",
            " 1    no_of_dependents          4269 non-null   int64 \n",
            " 2    education                 4269 non-null   object\n",
            " 3    self_employed             4269 non-null   object\n",
            " 4    income_annum              4269 non-null   int64 \n",
            " 5    loan_amount               4269 non-null   int64 \n",
            " 6    loan_term                 4269 non-null   int64 \n",
            " 7    cibil_score               4269 non-null   int64 \n",
            " 8    residential_assets_value  4269 non-null   int64 \n",
            " 9    commercial_assets_value   4269 non-null   int64 \n",
            " 10   luxury_assets_value       4269 non-null   int64 \n",
            " 11   bank_asset_value          4269 non-null   int64 \n",
            " 12   loan_status               4269 non-null   object\n",
            "dtypes: int64(10), object(3)\n",
            "memory usage: 433.7+ KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.nunique()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 491
        },
        "id": "DDvY_T47rsaz",
        "outputId": "e1a90c3b-3d41-41bf-f48f-c4384beae8f4"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "loan_id                      4269\n",
              " no_of_dependents               6\n",
              " education                      2\n",
              " self_employed                  2\n",
              " income_annum                  98\n",
              " loan_amount                  378\n",
              " loan_term                     10\n",
              " cibil_score                  601\n",
              " residential_assets_value     278\n",
              " commercial_assets_value      188\n",
              " luxury_assets_value          379\n",
              " bank_asset_value             146\n",
              " loan_status                    2\n",
              "dtype: int64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>loan_id</th>\n",
              "      <td>4269</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>no_of_dependents</th>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>education</th>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>self_employed</th>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>income_annum</th>\n",
              "      <td>98</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>loan_amount</th>\n",
              "      <td>378</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>loan_term</th>\n",
              "      <td>10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>cibil_score</th>\n",
              "      <td>601</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>residential_assets_value</th>\n",
              "      <td>278</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>commercial_assets_value</th>\n",
              "      <td>188</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>luxury_assets_value</th>\n",
              "      <td>379</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>bank_asset_value</th>\n",
              "      <td>146</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>loan_status</th>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> int64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.count()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 491
        },
        "id": "bk2z6QjLryDM",
        "outputId": "175b7c57-2748-44ad-cd38-7b10e4101129"
      },
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "loan_id                      4269\n",
              " no_of_dependents            4269\n",
              " education                   4269\n",
              " self_employed               4269\n",
              " income_annum                4269\n",
              " loan_amount                 4269\n",
              " loan_term                   4269\n",
              " cibil_score                 4269\n",
              " residential_assets_value    4269\n",
              " commercial_assets_value     4269\n",
              " luxury_assets_value         4269\n",
              " bank_asset_value            4269\n",
              " loan_status                 4269\n",
              "dtype: int64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>loan_id</th>\n",
              "      <td>4269</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>no_of_dependents</th>\n",
              "      <td>4269</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>education</th>\n",
              "      <td>4269</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>self_employed</th>\n",
              "      <td>4269</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>income_annum</th>\n",
              "      <td>4269</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>loan_amount</th>\n",
              "      <td>4269</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>loan_term</th>\n",
              "      <td>4269</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>cibil_score</th>\n",
              "      <td>4269</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>residential_assets_value</th>\n",
              "      <td>4269</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>commercial_assets_value</th>\n",
              "      <td>4269</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>luxury_assets_value</th>\n",
              "      <td>4269</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>bank_asset_value</th>\n",
              "      <td>4269</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>loan_status</th>\n",
              "      <td>4269</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> int64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 11
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.describe()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 320
        },
        "id": "f2QKj7qmr1gm",
        "outputId": "50ab9531-316b-4b52-8412-ddb23e7dc22a"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "           loan_id   no_of_dependents   income_annum   loan_amount  \\\n",
              "count  4269.000000        4269.000000   4.269000e+03  4.269000e+03   \n",
              "mean   2135.000000           2.498712   5.059124e+06  1.513345e+07   \n",
              "std    1232.498479           1.695910   2.806840e+06  9.043363e+06   \n",
              "min       1.000000           0.000000   2.000000e+05  3.000000e+05   \n",
              "25%    1068.000000           1.000000   2.700000e+06  7.700000e+06   \n",
              "50%    2135.000000           3.000000   5.100000e+06  1.450000e+07   \n",
              "75%    3202.000000           4.000000   7.500000e+06  2.150000e+07   \n",
              "max    4269.000000           5.000000   9.900000e+06  3.950000e+07   \n",
              "\n",
              "         loan_term   cibil_score   residential_assets_value  \\\n",
              "count  4269.000000   4269.000000               4.269000e+03   \n",
              "mean     10.900445    599.936051               7.472617e+06   \n",
              "std       5.709187    172.430401               6.503637e+06   \n",
              "min       2.000000    300.000000              -1.000000e+05   \n",
              "25%       6.000000    453.000000               2.200000e+06   \n",
              "50%      10.000000    600.000000               5.600000e+06   \n",
              "75%      16.000000    748.000000               1.130000e+07   \n",
              "max      20.000000    900.000000               2.910000e+07   \n",
              "\n",
              "        commercial_assets_value   luxury_assets_value   bank_asset_value  \n",
              "count              4.269000e+03          4.269000e+03       4.269000e+03  \n",
              "mean               4.973155e+06          1.512631e+07       4.976692e+06  \n",
              "std                4.388966e+06          9.103754e+06       3.250185e+06  \n",
              "min                0.000000e+00          3.000000e+05       0.000000e+00  \n",
              "25%                1.300000e+06          7.500000e+06       2.300000e+06  \n",
              "50%                3.700000e+06          1.460000e+07       4.600000e+06  \n",
              "75%                7.600000e+06          2.170000e+07       7.100000e+06  \n",
              "max                1.940000e+07          3.920000e+07       1.470000e+07  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-8fa8b8e2-7db0-4801-a5ab-a501c9964895\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>loan_id</th>\n",
              "      <th>no_of_dependents</th>\n",
              "      <th>income_annum</th>\n",
              "      <th>loan_amount</th>\n",
              "      <th>loan_term</th>\n",
              "      <th>cibil_score</th>\n",
              "      <th>residential_assets_value</th>\n",
              "      <th>commercial_assets_value</th>\n",
              "      <th>luxury_assets_value</th>\n",
              "      <th>bank_asset_value</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>4269.000000</td>\n",
              "      <td>4269.000000</td>\n",
              "      <td>4.269000e+03</td>\n",
              "      <td>4.269000e+03</td>\n",
              "      <td>4269.000000</td>\n",
              "      <td>4269.000000</td>\n",
              "      <td>4.269000e+03</td>\n",
              "      <td>4.269000e+03</td>\n",
              "      <td>4.269000e+03</td>\n",
              "      <td>4.269000e+03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>2135.000000</td>\n",
              "      <td>2.498712</td>\n",
              "      <td>5.059124e+06</td>\n",
              "      <td>1.513345e+07</td>\n",
              "      <td>10.900445</td>\n",
              "      <td>599.936051</td>\n",
              "      <td>7.472617e+06</td>\n",
              "      <td>4.973155e+06</td>\n",
              "      <td>1.512631e+07</td>\n",
              "      <td>4.976692e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>1232.498479</td>\n",
              "      <td>1.695910</td>\n",
              "      <td>2.806840e+06</td>\n",
              "      <td>9.043363e+06</td>\n",
              "      <td>5.709187</td>\n",
              "      <td>172.430401</td>\n",
              "      <td>6.503637e+06</td>\n",
              "      <td>4.388966e+06</td>\n",
              "      <td>9.103754e+06</td>\n",
              "      <td>3.250185e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>2.000000e+05</td>\n",
              "      <td>3.000000e+05</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>300.000000</td>\n",
              "      <td>-1.000000e+05</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>3.000000e+05</td>\n",
              "      <td>0.000000e+00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>1068.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>2.700000e+06</td>\n",
              "      <td>7.700000e+06</td>\n",
              "      <td>6.000000</td>\n",
              "      <td>453.000000</td>\n",
              "      <td>2.200000e+06</td>\n",
              "      <td>1.300000e+06</td>\n",
              "      <td>7.500000e+06</td>\n",
              "      <td>2.300000e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>2135.000000</td>\n",
              "      <td>3.000000</td>\n",
              "      <td>5.100000e+06</td>\n",
              "      <td>1.450000e+07</td>\n",
              "      <td>10.000000</td>\n",
              "      <td>600.000000</td>\n",
              "      <td>5.600000e+06</td>\n",
              "      <td>3.700000e+06</td>\n",
              "      <td>1.460000e+07</td>\n",
              "      <td>4.600000e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>3202.000000</td>\n",
              "      <td>4.000000</td>\n",
              "      <td>7.500000e+06</td>\n",
              "      <td>2.150000e+07</td>\n",
              "      <td>16.000000</td>\n",
              "      <td>748.000000</td>\n",
              "      <td>1.130000e+07</td>\n",
              "      <td>7.600000e+06</td>\n",
              "      <td>2.170000e+07</td>\n",
              "      <td>7.100000e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>4269.000000</td>\n",
              "      <td>5.000000</td>\n",
              "      <td>9.900000e+06</td>\n",
              "      <td>3.950000e+07</td>\n",
              "      <td>20.000000</td>\n",
              "      <td>900.000000</td>\n",
              "      <td>2.910000e+07</td>\n",
              "      <td>1.940000e+07</td>\n",
              "      <td>3.920000e+07</td>\n",
              "      <td>1.470000e+07</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8fa8b8e2-7db0-4801-a5ab-a501c9964895')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-8fa8b8e2-7db0-4801-a5ab-a501c9964895 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-8fa8b8e2-7db0-4801-a5ab-a501c9964895');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-eb1a6569-e4e7-4491-b81e-eee395879fb2\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-eb1a6569-e4e7-4491-b81e-eee395879fb2')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-eb1a6569-e4e7-4491-b81e-eee395879fb2 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"loan_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1538.2634658725165,\n        \"min\": 1.0,\n        \"max\": 4269.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          4269.0,\n          2135.0,\n          3202.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" no_of_dependents\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1508.4518117060454,\n        \"min\": 0.0,\n        \"max\": 4269.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          2.4987116420707425,\n          3.0,\n          4269.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" income_annum\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3437390.0912845903,\n        \"min\": 4269.0,\n        \"max\": 9900000.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          5059123.9166081045,\n          5100000.0,\n          4269.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" loan_amount\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12837065.839384567,\n        \"min\": 4269.0,\n        \"max\": 39500000.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          15133450.456781447,\n          14500000.0,\n          4269.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" loan_term\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1505.7642551387924,\n        \"min\": 2.0,\n        \"max\": 4269.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          10.900445069102835,\n          10.0,\n          4269.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" cibil_score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1339.1773722653782,\n        \"min\": 172.43040073575904,\n        \"max\": 4269.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          599.9360505973295,\n          600.0,\n          4269.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" residential_assets_value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9464960.95825069,\n        \"min\": -100000.0,\n        \"max\": 29100000.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          7472616.537830873,\n          5600000.0,\n          4269.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" commercial_assets_value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6320013.940564741,\n        \"min\": 0.0,\n        \"max\": 19400000.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          4973155.3056922,\n          3700000.0,\n          4269.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" luxury_assets_value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12779780.356898261,\n        \"min\": 4269.0,\n        \"max\": 39200000.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          15126305.926446475,\n          14600000.0,\n          4269.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" bank_asset_value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4747818.903599107,\n        \"min\": 0.0,\n        \"max\": 14700000.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          4976692.433825252,\n          4600000.0,\n          4269.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.duplicated().sum().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "sLqB3Yplr4_y",
        "outputId": "4bf45ca7-9bdf-463d-ceff-2ff14267223e"
      },
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "np.int64(0)"
            ]
          },
          "metadata": {},
          "execution_count": 13
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.isnull().sum().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "DPcVmnrbr_HG",
        "outputId": "af4badd6-7f16-4ebe-a62e-d0eb8f925a17"
      },
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "np.int64(0)"
            ]
          },
          "metadata": {},
          "execution_count": 14
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.columns"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "RXhY4-nHq47O",
        "outputId": "f602614c-08bd-4035-8411-02398f6da348"
      },
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index(['loan_id', ' no_of_dependents', ' education', ' self_employed',\n",
              "       ' income_annum', ' loan_amount', ' loan_term', ' cibil_score',\n",
              "       ' residential_assets_value', ' commercial_assets_value',\n",
              "       ' luxury_assets_value', ' bank_asset_value', ' loan_status'],\n",
              "      dtype='object')"
            ]
          },
          "metadata": {},
          "execution_count": 15
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Checking for outliers using IQR method\n",
        "Q1 = df.quantile(0.25, numeric_only=True)\n",
        "Q3 = df.quantile(0.75, numeric_only=True)\n",
        "IQR = Q3 - Q1\n",
        "\n",
        "# Calculate outliers for each column using broadcasting\n",
        "outliers = ((df.select_dtypes(include=np.number) < (Q1 - 1.5 * IQR)) | (df.select_dtypes(include=np.number) > (Q3 + 1.5 * IQR))).sum()"
      ],
      "metadata": {
        "id": "Yy280zjYt7wZ"
      },
      "execution_count": 16,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "outliers"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 397
        },
        "id": "zSQZAdobuQTg",
        "outputId": "1ecafd61-1086-42f0-8499-a1c9abe01c06"
      },
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "loan_id                       0\n",
              " no_of_dependents             0\n",
              " income_annum                 0\n",
              " loan_amount                  0\n",
              " loan_term                    0\n",
              " cibil_score                  0\n",
              " residential_assets_value    52\n",
              " commercial_assets_value     37\n",
              " luxury_assets_value          0\n",
              " bank_asset_value             5\n",
              "dtype: int64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>loan_id</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>no_of_dependents</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>income_annum</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>loan_amount</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>loan_term</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>cibil_score</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>residential_assets_value</th>\n",
              "      <td>52</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>commercial_assets_value</th>\n",
              "      <td>37</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>luxury_assets_value</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>bank_asset_value</th>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> int64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 17
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Outlier Treatment (Capping residential_assets_value Outliers)\n",
        "Q1 = df[' residential_assets_value'].quantile(0.25)\n",
        "Q3 = df[' residential_assets_value'].quantile(0.75)\n",
        "IQR = Q3 - Q1\n",
        "upper_bound = Q3 + 1.5 * IQR\n",
        "\n",
        "df[' residential_assets_value'] = np.where(df[' residential_assets_value'] > upper_bound, upper_bound, df[' residential_assets_value'])\n"
      ],
      "metadata": {
        "id": "7XtBAnePub0g"
      },
      "execution_count": 18,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Outlier Treatment (Capping commercial_assets_value Outliers)\n",
        "Q1 = df[' commercial_assets_value'].quantile(0.25)\n",
        "Q3 = df[' commercial_assets_value'].quantile(0.75)\n",
        "IQR = Q3 - Q1\n",
        "upper_bound = Q3 + 1.5 * IQR\n",
        "\n",
        "df[' commercial_assets_value'] = np.where(df[' commercial_assets_value'] > upper_bound, upper_bound, df[' commercial_assets_value'])"
      ],
      "metadata": {
        "id": "ItbyU0zDzTG7"
      },
      "execution_count": 19,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Outlier Treatment (Capping bank_asset_value Outliers)\n",
        "Q1 = df[' bank_asset_value'].quantile(0.25)\n",
        "Q3 = df[' bank_asset_value'].quantile(0.75)\n",
        "IQR = Q3 - Q1\n",
        "upper_bound = Q3 + 1.5 * IQR\n",
        "\n",
        "df[' bank_asset_value'] = np.where(df[' bank_asset_value'] > upper_bound, upper_bound, df[' bank_asset_value'])"
      ],
      "metadata": {
        "id": "BLMpOqmPzn1U"
      },
      "execution_count": 20,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Checking for outliers using IQR method\n",
        "Q1 = df.quantile(0.25, numeric_only=True)\n",
        "Q3 = df.quantile(0.75, numeric_only=True)\n",
        "IQR = Q3 - Q1\n",
        "\n",
        "# Calculate outliers for each column using broadcasting\n",
        "outliers = ((df.select_dtypes(include=np.number) < (Q1 - 1.5 * IQR)) | (df.select_dtypes(include=np.number) > (Q3 + 1.5 * IQR))).sum()\n",
        "outliers"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 397
        },
        "id": "5m_pXme60Z4r",
        "outputId": "031ee1f1-e5e8-4199-d37f-db51e311a4e7"
      },
      "execution_count": 21,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "loan_id                      0\n",
              " no_of_dependents            0\n",
              " income_annum                0\n",
              " loan_amount                 0\n",
              " loan_term                   0\n",
              " cibil_score                 0\n",
              " residential_assets_value    0\n",
              " commercial_assets_value     0\n",
              " luxury_assets_value         0\n",
              " bank_asset_value            0\n",
              "dtype: int64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>loan_id</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>no_of_dependents</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>income_annum</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>loan_amount</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>loan_term</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>cibil_score</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>residential_assets_value</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>commercial_assets_value</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>luxury_assets_value</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>bank_asset_value</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> int64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 21
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "categorical_columns = df.select_dtypes(include=['object']).columns.tolist()"
      ],
      "metadata": {
        "id": "woGfovm80dkC"
      },
      "execution_count": 22,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "categorical_columns"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "4pk8bMdG16c0",
        "outputId": "b776a059-f66c-4f6f-f9c3-9728f65af024"
      },
      "execution_count": 23,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[' education', ' self_employed', ' loan_status']"
            ]
          },
          "metadata": {},
          "execution_count": 23
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Converting Categorical to Numerical using dummy variables\n",
        "df= pd.get_dummies(df, columns=categorical_columns, drop_first=True, dtype=int)\n",
        "print(df)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "_kz2Zvqx2JVH",
        "outputId": "cec159eb-3cb8-40db-94e4-690121f951c5"
      },
      "execution_count": 24,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "      loan_id   no_of_dependents   income_annum   loan_amount   loan_term  \\\n",
            "0           1                  2        9600000      29900000          12   \n",
            "1           2                  0        4100000      12200000           8   \n",
            "2           3                  3        9100000      29700000          20   \n",
            "3           4                  3        8200000      30700000           8   \n",
            "4           5                  5        9800000      24200000          20   \n",
            "...       ...                ...            ...           ...         ...   \n",
            "4264     4265                  5        1000000       2300000          12   \n",
            "4265     4266                  0        3300000      11300000          20   \n",
            "4266     4267                  2        6500000      23900000          18   \n",
            "4267     4268                  1        4100000      12800000           8   \n",
            "4268     4269                  1        9200000      29700000          10   \n",
            "\n",
            "       cibil_score   residential_assets_value   commercial_assets_value  \\\n",
            "0              778                  2400000.0                17050000.0   \n",
            "1              417                  2700000.0                 2200000.0   \n",
            "2              506                  7100000.0                 4500000.0   \n",
            "3              467                 18200000.0                 3300000.0   \n",
            "4              382                 12400000.0                 8200000.0   \n",
            "...            ...                        ...                       ...   \n",
            "4264           317                  2800000.0                  500000.0   \n",
            "4265           559                  4200000.0                 2900000.0   \n",
            "4266           457                  1200000.0                12400000.0   \n",
            "4267           780                  8200000.0                  700000.0   \n",
            "4268           607                 17800000.0                11800000.0   \n",
            "\n",
            "       luxury_assets_value   bank_asset_value   education_ Not Graduate  \\\n",
            "0                 22700000          8000000.0                         0   \n",
            "1                  8800000          3300000.0                         1   \n",
            "2                 33300000         12800000.0                         0   \n",
            "3                 23300000          7900000.0                         0   \n",
            "4                 29400000          5000000.0                         1   \n",
            "...                    ...                ...                       ...   \n",
            "4264               3300000           800000.0                         0   \n",
            "4265              11000000          1900000.0                         1   \n",
            "4266              18100000          7300000.0                         1   \n",
            "4267              14100000          5800000.0                         1   \n",
            "4268              35700000         12000000.0                         0   \n",
            "\n",
            "       self_employed_ Yes   loan_status_ Rejected  \n",
            "0                       0                       0  \n",
            "1                       1                       1  \n",
            "2                       0                       1  \n",
            "3                       0                       1  \n",
            "4                       1                       1  \n",
            "...                   ...                     ...  \n",
            "4264                    1                       1  \n",
            "4265                    1                       0  \n",
            "4266                    0                       1  \n",
            "4267                    0                       0  \n",
            "4268                    0                       0  \n",
            "\n",
            "[4269 rows x 13 columns]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 261
        },
        "id": "Bk8M6BdSTPuQ",
        "outputId": "db60e48d-15e4-4429-9ebc-424457f9f5b2"
      },
      "execution_count": 25,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   loan_id   no_of_dependents   income_annum   loan_amount   loan_term  \\\n",
              "0        1                  2        9600000      29900000          12   \n",
              "1        2                  0        4100000      12200000           8   \n",
              "2        3                  3        9100000      29700000          20   \n",
              "3        4                  3        8200000      30700000           8   \n",
              "4        5                  5        9800000      24200000          20   \n",
              "\n",
              "    cibil_score   residential_assets_value   commercial_assets_value  \\\n",
              "0           778                  2400000.0                17050000.0   \n",
              "1           417                  2700000.0                 2200000.0   \n",
              "2           506                  7100000.0                 4500000.0   \n",
              "3           467                 18200000.0                 3300000.0   \n",
              "4           382                 12400000.0                 8200000.0   \n",
              "\n",
              "    luxury_assets_value   bank_asset_value   education_ Not Graduate  \\\n",
              "0              22700000          8000000.0                         0   \n",
              "1               8800000          3300000.0                         1   \n",
              "2              33300000         12800000.0                         0   \n",
              "3              23300000          7900000.0                         0   \n",
              "4              29400000          5000000.0                         1   \n",
              "\n",
              "    self_employed_ Yes   loan_status_ Rejected  \n",
              "0                    0                       0  \n",
              "1                    1                       1  \n",
              "2                    0                       1  \n",
              "3                    0                       1  \n",
              "4                    1                       1  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-da19254e-c834-4235-b3e3-1300e3e35a57\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>loan_id</th>\n",
              "      <th>no_of_dependents</th>\n",
              "      <th>income_annum</th>\n",
              "      <th>loan_amount</th>\n",
              "      <th>loan_term</th>\n",
              "      <th>cibil_score</th>\n",
              "      <th>residential_assets_value</th>\n",
              "      <th>commercial_assets_value</th>\n",
              "      <th>luxury_assets_value</th>\n",
              "      <th>bank_asset_value</th>\n",
              "      <th>education_ Not Graduate</th>\n",
              "      <th>self_employed_ Yes</th>\n",
              "      <th>loan_status_ Rejected</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>9600000</td>\n",
              "      <td>29900000</td>\n",
              "      <td>12</td>\n",
              "      <td>778</td>\n",
              "      <td>2400000.0</td>\n",
              "      <td>17050000.0</td>\n",
              "      <td>22700000</td>\n",
              "      <td>8000000.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>4100000</td>\n",
              "      <td>12200000</td>\n",
              "      <td>8</td>\n",
              "      <td>417</td>\n",
              "      <td>2700000.0</td>\n",
              "      <td>2200000.0</td>\n",
              "      <td>8800000</td>\n",
              "      <td>3300000.0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>9100000</td>\n",
              "      <td>29700000</td>\n",
              "      <td>20</td>\n",
              "      <td>506</td>\n",
              "      <td>7100000.0</td>\n",
              "      <td>4500000.0</td>\n",
              "      <td>33300000</td>\n",
              "      <td>12800000.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "      <td>8200000</td>\n",
              "      <td>30700000</td>\n",
              "      <td>8</td>\n",
              "      <td>467</td>\n",
              "      <td>18200000.0</td>\n",
              "      <td>3300000.0</td>\n",
              "      <td>23300000</td>\n",
              "      <td>7900000.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "      <td>9800000</td>\n",
              "      <td>24200000</td>\n",
              "      <td>20</td>\n",
              "      <td>382</td>\n",
              "      <td>12400000.0</td>\n",
              "      <td>8200000.0</td>\n",
              "      <td>29400000</td>\n",
              "      <td>5000000.0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-da19254e-c834-4235-b3e3-1300e3e35a57')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-da19254e-c834-4235-b3e3-1300e3e35a57 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-da19254e-c834-4235-b3e3-1300e3e35a57');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-ba3148d8-113b-43ad-9d34-0b37508091e0\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ba3148d8-113b-43ad-9d34-0b37508091e0')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-ba3148d8-113b-43ad-9d34-0b37508091e0 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 4269,\n  \"fields\": [\n    {\n      \"column\": \"loan_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1232,\n        \"min\": 1,\n        \"max\": 4269,\n        \"num_unique_values\": 4269,\n        \"samples\": [\n          1704,\n          1174,\n          309\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" no_of_dependents\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 5,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          2,\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" income_annum\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2806839,\n        \"min\": 200000,\n        \"max\": 9900000,\n        \"num_unique_values\": 98,\n        \"samples\": [\n          6200000,\n          9300000,\n          7600000\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" loan_amount\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9043362,\n        \"min\": 300000,\n        \"max\": 39500000,\n        \"num_unique_values\": 378,\n        \"samples\": [\n          25800000,\n          26100000,\n          21700000\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" loan_term\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5,\n        \"min\": 2,\n        \"max\": 20,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          14,\n          8,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" cibil_score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 172,\n        \"min\": 300,\n        \"max\": 900,\n        \"num_unique_values\": 601,\n        \"samples\": [\n          859,\n          414,\n          500\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" residential_assets_value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6452441.573478554,\n        \"min\": -100000.0,\n        \"max\": 24950000.0,\n        \"num_unique_values\": 251,\n        \"samples\": [\n          17400000.0,\n          22500000.0,\n          16900000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" commercial_assets_value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4363080.452230729,\n        \"min\": 0.0,\n        \"max\": 17050000.0,\n        \"num_unique_values\": 172,\n        \"samples\": [\n          2000000.0,\n          14000000.0,\n          6400000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" luxury_assets_value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9103753,\n        \"min\": 300000,\n        \"max\": 39200000,\n        \"num_unique_values\": 379,\n        \"samples\": [\n          15300000,\n          12100000,\n          15400000\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" bank_asset_value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3249158.583582514,\n        \"min\": 0.0,\n        \"max\": 14300000.0,\n        \"num_unique_values\": 143,\n        \"samples\": [\n          10800000.0,\n          300000.0,\n          4600000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" education_ Not Graduate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" self_employed_ Yes\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \" loan_status_ Rejected\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 25
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 10. Correlation Matrix\n",
        "plt.figure(figsize=(10,6))\n",
        "sns.heatmap(df.corr(), annot=True, fmt=\".2f\", cmap=\"coolwarm\")\n",
        "plt.title(\"Correlation Heatmap\")\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 533
        },
        "id": "4b4Rm41oTPR3",
        "outputId": "ebdc1867-0af7-481a-e2a6-e0dd39c8c07c"
      },
      "execution_count": 26,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 2 Axes>"
            ],
            "image/png": "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SI7K79y5E4ARI0boTP/iiy8AnntW1c3NjZYtW+pdVs+ePXWeR71w4QI3btyga9euhISEEBwcTHBwMDExMbzzzjscPnwYtVqdZbaMy4qKiiI4OJiGDRsSGxvL1atXc7R9GT1+/JgLFy7g4+ND0aJFtdOrV69O8+bNtXWR0YABA3T+btiwISEhIdp6zo6FhQV79+7V+8psw4YNeHl5UalSJW09BQcH07RpUwAOHjyoLZuxXiIiIggODqZx48bcvn2biIiIF1dEmj59+qBQKLR/161bF41GQ58+fbTTTExMqFOnDrdv39aZN2OGsLAwIiIiaNiwIefPn39uPfXr16d27drav8uWLUu7du3YvXu3zu3aQgghXo7c4iuEEKLAsrW1BVIv6HLi7t27KJVK3N3ddaY7Oztjb2/P3bt3daa7ublluazM7924cQNIvXDNSkREBA4ODnrfu3LlCuPHj+fAgQPPXRDm5kLsmWfbkvG25Ge8vLzYvXs3MTExWFtba6eXLVtWp9yzrGFhYdq6zoqJiQnNmjXLUbYbN27g7+9P8eLF9b7/5MkT7f8fO3aMiRMncuLEieeeh42IiMDOzi5H68y8bc/mc3FxeW56WFiYzrQdO3YwdepULly4oPOMbMYL3mc8PDyem1axYkViY2N5+vQpzs7OOcorhBBCP7lAFUIIUWDZ2tpSqlQpLl++nKv59F1Y6KNvxN6s3nvWOzpnzhxq1Kihd56snhcNDw+ncePG2NraMmXKFCpUqICFhQXnz59nzJgx2fa8GpKJiYne6ZpMgwbllVqtplq1asybN0/v+88uGm/dusU777xDpUqVmDdvHi4uLpibm7Nz506+++67XNVLVtumb3rG7T1y5Aht27alUaNGLFy4kJIlS2JmZsayZctYu3ZtjtcvhBDCMOQCVQghRIHWunVrfH19OXHiBPXr18+2bLly5VCr1dy4cQMvLy/t9KCgIMLDwylXrtxL56hQoQKQetGc057EZw4dOkRISAibNm2iUaNG2ukBAQHPlc3pxfWzbbl27dpz7129ehVHR0ed3tNXqUKFCly8eJF33nkn2+3Zvn07CQkJbNu2TacHNOMtwM/ktF5y648//sDCwoLdu3ejUqm005ctW6a3/LOe9IyuX7+OlZVVlj3GQgghck6eQRVCCFGgjR49Gmtra/r27UtQUNBz79+6dYsF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QgghpDJjxozBwYMHxcYPHz6MMWPGMEhEpIWVlRVOnjwpfFw2Kd2+fTs6duzIKhYhpBp0B5UQQgghvHXt2jWsWbNGbLxHjx747bffGCQi0sLLywsDBgzA/fv3UVRUhHXr1uH+/fu4fPkywsLCWMcjhFSC7qASQgghhLfy8/OFxZHKKywsxIcPHxgkItKiS5cuiI6ORlFREczNzXH27FloaWnhypUr+O6771jHI4RUgookEUIIIYS3evbsCTMzM2zYsEFkfPr06YiNjUV4eDijZIQQQr4EWuJLCCGEEN5avnw5+vTpg5iYGPTu3RsAEBISghs3buDs2bOM0xFCCPnc6A4qIYQQQngtOjoav//+O6Kjo6GoqIg2bdrgl19+gZGREetohBBCPjOaoBJCCCGEEEII4QUqkkQIIYQQQgghhBdogkoIIYQQQgghhBdogkoIIYQQQgghhBdogkoIIYQQQgghhBdogkoIIYQQQgghhBdogkoIIYQQQgghhBdogkoIIYQQQgghhBdogkoIIYQQQgghhBdogkoIIYQQQgghhBdogkoIIYQQQgghhBdogkoIIYQQQgghhBdogkoIIYQQQgghhBf+BwDmMOYAzYxTAAAAAElFTkSuQmCC\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(6,4))\n",
        "sns.countplot(x=' loan_status_ Rejected', data=df, palette='Set2')\n",
        "plt.title(\"Loan Status (0 = Approved, 1 = Rejected)\")\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 517
        },
        "id": "xqG7DcBbU_Fj",
        "outputId": "fd78b463-a5a7-4fb3-e063-f68bca4a84ad"
      },
      "execution_count": 27,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-27-4670fd33b16c>:2: FutureWarning: \n",
            "\n",
            "Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n",
            "\n",
            "  sns.countplot(x=' loan_status_ Rejected', data=df, palette='Set2')\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 600x400 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Overall Loan Approval Rate: The percentage of approved vs. rejected loans.\n",
        "loan_status_counts = df[' loan_status_ Rejected'].value_counts()\n",
        "total_loans = loan_status_counts.sum()\n",
        "approval_rate = (loan_status_counts[0] / total_loans) * 100\n",
        "print(f\"Overall Loan Approval Rate: {approval_rate:.2f}%\")\n",
        "Rejected_rate = (loan_status_counts[1] / total_loans) * 100\n",
        "print(f\"Overall Loan Rejected Rate: {Rejected_rate:.2f}%\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "bZLIj2aoXo-U",
        "outputId": "65138671-20c7-4a15-ac76-241d8489b7e1"
      },
      "execution_count": 28,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Overall Loan Approval Rate: 62.22%\n",
            "Overall Loan Rejected Rate: 37.78%\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.bar(['Approved', 'Rejected'], [approval_rate, Rejected_rate], color=['green', 'red'])\n",
        "plt.title(\"Loan Approval Percentage\")\n",
        "plt.ylabel(\"Percentage\")\n",
        "plt.xticks(rotation=0)\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 452
        },
        "id": "oELVmR_oYx19",
        "outputId": "42bd65a2-0f3f-4940-b0ec-2440ca4d2f2d"
      },
      "execution_count": 29,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.columns"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "e4t2vdmpVwFI",
        "outputId": "3611b328-6953-443f-ee58-3138fd84d059"
      },
      "execution_count": 30,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index(['loan_id', ' no_of_dependents', ' income_annum', ' loan_amount',\n",
              "       ' loan_term', ' cibil_score', ' residential_assets_value',\n",
              "       ' commercial_assets_value', ' luxury_assets_value', ' bank_asset_value',\n",
              "       ' education_ Not Graduate', ' self_employed_ Yes',\n",
              "       ' loan_status_ Rejected'],\n",
              "      dtype='object')"
            ]
          },
          "metadata": {},
          "execution_count": 30
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Income vs Loan Approval\n",
        "plt.figure(figsize=(8,5))\n",
        "sns.histplot(data=df, x=' income_annum', hue=' loan_status_ Rejected', bins=30, kde=True)\n",
        "plt.title(\"Income vs Loan Status\")\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 487
        },
        "id": "mgJftS6QZjPi",
        "outputId": "e1084eb4-fa7d-48b6-de00-66a0c03ef34a"
      },
      "execution_count": 31,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(8, 5))\n",
        "sns.boxplot(x=' loan_status_ Rejected', y=' income_annum', data=df, palette='coolwarm')\n",
        "plt.title('Income vs Loan Approval (Box Plot)')\n",
        "plt.xlabel('Loan Status (0: Approved , 1: Rejected)')\n",
        "plt.ylabel('Annual Income')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 594
        },
        "id": "gbKkdFUBbd3J",
        "outputId": "6d10097e-b6bf-4c84-becf-2d8072dcdc68"
      },
      "execution_count": 32,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-32-cd7042b0bb42>:2: FutureWarning: \n",
            "\n",
            "Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n",
            "\n",
            "  sns.boxplot(x=' loan_status_ Rejected', y=' income_annum', data=df, palette='coolwarm')\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#CIBIL Score vs Loan Approval\n",
        "plt.figure(figsize=(8,5))\n",
        "sns.histplot(data=df, x=' cibil_score', hue=' loan_status_ Rejected', bins=30, kde=True)\n",
        "plt.title(\"CIBIL Score vs Loan Status\")\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 487
        },
        "id": "A_pjEr1aeANK",
        "outputId": "556979f8-eccb-402f-c8b2-de0405a4b5b3"
      },
      "execution_count": 33,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Loan Amount vs Loan Status\n",
        "plt.figure(figsize=(8,5))\n",
        "sns.histplot(data=df, x=' loan_amount', hue=' loan_status_ Rejected', bins=30, kde=True)\n",
        "plt.title(\"Loan Amount vs Loan Status\")\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 487
        },
        "id": "ofushcPhe5MU",
        "outputId": "8dd4b17b-6305-484b-f7ca-1423f818b6de"
      },
      "execution_count": 34,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Residential Assets vs Loan Status\n",
        "plt.figure(figsize=(8,5))\n",
        "sns.histplot(data=df, x=' residential_assets_value', hue=' loan_status_ Rejected', bins=30, kde=True)\n",
        "plt.title(\"Residential Assets vs Loan Status\")\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 487
        },
        "id": "J5r68BWUffdB",
        "outputId": "016de8c4-0d15-4860-afc6-b3a974abfab5"
      },
      "execution_count": 35,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Final Insights\n",
        "print(\"\\n✅ Key Insights:\")\n",
        "print(\"- Higher income and higher CIBIL score increase chances of loan approval.\")\n",
        "print(\"- Higher loan amounts are associated with increased rejection rates.\")\n",
        "print(\"- Applicants with valuable assets (residential or commercial) are more likely to be approved.\")\n",
        "print(\"- Employment status and education level also show some influence.\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "1vpjnU-Cf_Pm",
        "outputId": "ed52b018-d149-4200-85da-aaa5ff8664d1"
      },
      "execution_count": 37,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "✅ Key Insights:\n",
            "- Higher income and higher CIBIL score increase chances of loan approval.\n",
            "- Higher loan amounts are associated with increased rejection rates.\n",
            "- Applicants with valuable assets (residential or commercial) are more likely to be approved.\n",
            "- Employment status and education level also show some influence.\n"
          ]
        }
      ]
    }
  ]
}
